/*
   宏 Macros

   宏是一种特殊的代码, 它在编译阶段的早期(在做代码分析、生命周期检查之前)就会被执行, 作用是生成Rust代码.

   使用宏代替函数的缺点是宏定义比函数定义更为复杂，因为你正在编写用于编写Rust代码的Rust代码。由于这种间接性，宏定义通常比函数定义更难读、理解和维护.

   编写宏代码也被称为元编程, 宏具有一些函数所没有的额外能力, 比如说: 宏支持接收任意数量的参数, 且参数的类型没有约束.

   Macros 详细的语法: https://doc.rust-lang.org/reference/macros-by-example.html
*/

fn main() {
    println!("nihao");
}
