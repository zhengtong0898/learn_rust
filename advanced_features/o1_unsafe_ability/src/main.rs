fn main() {
    // 使用 `unsafe` 关键字, 切换到超级权限作用域,
    // 这意味着在超级权限作用域内, 我们可以直接访问内存、修改.
    //
    //     1. 解引用一个原始指针.
    //
    //     2. 调用 `unsafe` 关键字的函数或方法.
    //
    //     3. 访问 可变引用的值、不可变引用的值, 甚至可以修改不可变引用的值.
    //
    //     4. 可以定义和实现 unsafe trait 接口.
    //
    //     5. 访问 union 的字段.
    //
    // 注意事项:
    // 常规的引用在`unsafe`作用域中仍然要遵循借用规则.
}
